- name: deploy vm from ova
  hosts: all
  gather_facts: no
  become: no
  vars:
    vcenter_datacenter: cloud
    vcenter_cluster: mylab
    disk_mode: thin
    target_esx_datastore: datastore1
    target_esx_portgroup: mgmt
    ova_file: bitnami-nginx-1.18.0-5-r03-linux-centos-7-x86_64-nami.ova
    vm_name: nginx-from-ova
    user_data: |
      #!/bin/bash
      echo "root:{{ ansible_password | default(ansible_ssh_password) }}" | chpasswd
      sed -i 's/PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
      systemctl enable sshd
      systemctl start sshd
  tasks:
    - name: check file
      ansible.builtin.stat:
        path: "{{ ova_file }}"
        get_checksum: no
      delegate_to: localhost
      register: check_ova_file

    - name: fail if the file doesn't exist
      fail:
        msg: "{{ ova_file }} doesn't exist"
      when: not check_ova_file.stat.exists

    - name: deploy ova
      community.vmware.vmware_deploy_ovf:
        hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
        username: "{{ lookup('env', 'VMWARE_USER') }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
        validate_certs: no
        datacenter: '{{ vcenter_datacenter }}'
        ovf: "{{ ova_file }}"
        name: "{{ vm_name }}"
        properties:
          va-ssh-public-key: ""
          user-data: "{{ user_data | b64encode }}"
          network.ip0: "192.168.1.53"
          network.netmask0: "255.255.255.0"
          network.gateway: "192.168.1.254"
          network.domain: "home.ad"
          network.dns: "8.8.8.8"
          network.searchpath: ""
        disk_provisioning: "{{ disk_mode }}"
        networks:
          "bridged": '{{ target_esx_portgroup }}'
        cluster: '{{ vcenter_cluster }}'
        datastore: '{{ target_esx_datastore }}'
        inject_ovf_env: yes
        power_on: yes
      delegate_to: localhost

    # smoke test that nginx is serving requests
    - name: proper response from nginx is received
      ansible.builtin.uri:
        url: http://192.168.1.53
        return_content: yes
      register: response
      until: "'Bitnami NGINX Open Source' in response.content"
      retries: 50
      delay: 30
      ignore_errors: yes
      delegate_to: localhost

    - name: output url
      debug:
        msg: "application is available at http://192.168.1.53"
      when: response is success