- name: deploy vm from ova
  hosts: all
  gather_facts: no
  become: no
  vars:
    datastore_name: nfs_vol01
    network_host: 192.168.1.103
    network_path: /mnt/vault/work/install
    network_mount_dir: /vmfs/volumes/{{ datastore_name }}
    ova_path: images
    vcenter_datacenter: cloud
    vcenter_cluster: mylab
    disk_mode: thin
    target_esx_datastore: datastore1
    target_esx_portgroup: mgmt
    ova_file: bitnami-nginx-1.18.0-5-r03-linux-centos-7-x86_64-nami.ova
    ovftool: '{{ network_mount_dir }}/images/ovftool/lin64/ovftool'
    vm_name: nginx-from-ova
    user_data: |
      #!/bin/bash
      echo "root:{{ ansible_password | default(ansible_ssh_password) }}" | chpasswd
      sed -i 's/PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
      systemctl enable sshd
      systemctl start sshd
  tasks:
    - block:
        - name: mount NFS datastore
          community.vmware.vmware_host_datastore:
            hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
            username: "{{ lookup('env', 'VMWARE_USER') }}"
            password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
            datastore_name: '{{ datastore_name }}'
            datastore_type: nfs
            nfs_server: '{{ network_host }}'
            nfs_path: '{{ network_path }}'
            nfs_ro: yes
            esxi_hostname: '{{ ansible_host }}'
            state: present
          delegate_to: localhost

        - name: deploy ova
          ansible.builtin.command: >
            {{ ovftool }}
            --acceptAllEulas
            --noSSLVerify
            --X:injectOvfEnv
            --allowExtraConfig
            --X:enableHiddenProperties
            --X:connectionFileTransferRetryCount=3
            --sourceType=OVA
            --powerOn
            --net:"bridged"='{{ target_esx_portgroup }}'
            --datastore='{{ target_esx_datastore }}'
            --diskMode='{{ disk_mode }}'
            --name="{{ vm_name }}"
            --prop:user-data="{{ user_data | b64encode }}"
            --prop:network.ip0="192.168.1.53"
            --prop:network.netmask0="255.255.255.0"
            --prop:network.gateway="192.168.1.254"
            --prop:network.domain="home.ad"
            --prop:network.dns="8.8.8.8"
            '{{ network_mount_dir }}/{{ ova_path }}/{{ ova_file }}'
            vi://"{{ ansible_user | default(ansible_ssh_user) | default('root') | urlencode }}":"{{ ansible_password | default(ansible_ssh_password) | urlencode }}"@{{ ansible_host }}/
          register: deploy_ova
          changed_when: ('Duplicate name' not in deploy_ova.stdout)
          failed_when:
            - deploy_ova.rc == '1'
            - ('Duplicate name' not in deploy_ova.stdout)

      always:
        - name: unmount NFS datastore
          community.vmware.vmware_host_datastore:
            hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
            username: "{{ lookup('env', 'VMWARE_USER') }}"
            password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
            datastore_name: '{{ datastore_name }}'
            esxi_hostname: '{{ ansible_host }}'
            state: absent
          delegate_to: localhost
          register: unmount_datastore
          until: unmount_datastore is success
          delay: 3
          retries: 10

    # smoke test that nginx is serving requests
    - name: proper response from nginx is received
      ansible.builtin.uri:
        url: http://192.168.1.53
        return_content: yes
      register: response
      until: "'Bitnami NGINX Open Source' in response.content"
      retries: 50
      delay: 30
      ignore_errors: yes
      delegate_to: localhost

    - name: output url
      debug:
        msg: "application is available at http://192.168.1.53"
      when: response is success