- name: deploy vm from ova
  hosts: all
  gather_facts: no
  become: no
  vars:
    datastore_name: nfs_vol01
    network_host: 192.168.1.103
    network_path: /mnt/vault/work/install
    network_mount_dir: /vmfs/volumes/{{ datastore_name }}
    ova_path: images
    vcenter_datacenter: cloud
    vcenter_cluster: mylab
    disk_mode: thin
    target_esx_datastore: datastore1
    target_esx_portgroup: mgmt
    ova_file: bitnami-nginx-1.18.0-5-r03-linux-centos-7-x86_64-nami.ova
    ovftool: '{{ network_mount_dir }}/images/ovftool/lin64/ovftool'
  tasks:
    - block:
        - name: mount NFS datastore
          vmware_host_datastore:
            hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
            username: "{{ lookup('env', 'VMWARE_USER') }}"
            password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
            datacenter_name: '{{ vcenter_datacenter }}'
            datastore_name: '{{ datastore_name }}'
            datastore_type: nfs
            nfs_server: '{{ network_host }}'
            nfs_path: '{{ network_path }}'
            nfs_ro: yes
            esxi_hostname: '{{ ansible_host }}'
            state: present
          delegate_to: localhost

        - name: deploy ova
          command: >
            {{ ovftool }}
            --acceptAllEulas
            --noSSLVerify
            --X:injectOvfEnv
            --allowExtraConfig
            --X:connectionFileTransferRetryCount=3
            --sourceType=OVA
            --net:"bridged"='{{ target_esx_portgroup }}'
            --datastore='{{ target_esx_datastore }}'
            --diskMode='{{ disk_mode }}'
            --name=nginx-from-ova
            --prop:network.ip0="192.168.1.53"
            --prop:network.netmask0="255.255.255.0"
            --prop:network.gateway="192.168.1.254"
            --prop:network.domain="home.ad"
            --prop:network.dns="8.8.8.8"
            '{{ network_mount_dir }}/{{ ova_path}}/{{ item }}'
            vi://"{{ ansible_user | default(ansible_ssh_user) | default('root') | urlencode }}":"{{ ansible_password | default(ansible_ssh_password) | urlencode }}"@{{ ansible_host }}/

      always:
        - name: remove NFS datastore
          vmware_host_datastore:
            hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
            username: "{{ lookup('env', 'VMWARE_USER') }}"
            password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
            datastore_name: '{{ datastore_name }}'
            state: absent
          delegate_to: localhost